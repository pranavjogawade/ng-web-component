{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACM;AACR;AACY;AAGd;;AAY/C,MAAM,SAAS;IACpB,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACpC,MAAM,eAAe,GAAG,IAAI,iFAA0B,CAAC,kEAAa,EAAE,QAAQ,CAAC,CAAC;QAChF,MAAM,YAAY,GAAG,6EAAmB,CAAC,kEAAa,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAC,CAAC,CAAC;QACrF,IAAG,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC;YAAE,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IACrF,CAAC;IAED,aAAa,KAAI,CAAC;;wFAPP,SAAS;4IAAT,SAAS,iIAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,kEAAa,aAGb,uEAAa;6FAKJ,SAAS;cAVrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE,CAAC,kEAAa,CAAC;aACjC;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAyD;;AAOlD,MAAM,aAAa;IAExB;QADS,sBAAiB,GAAG,KAAK,CAAC;IACnB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;6FDOL,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAEE,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, DoBootstrap, Injector } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { ElementZoneStrategyFactory } from 'elements-zone-strategy';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  entryComponents: [AuthComponent]\n})\nexport class AppModule implements DoBootstrap{ \n  constructor(private injector: Injector) {\n    const strategyFactory = new ElementZoneStrategyFactory(AuthComponent, injector);\n    const webComponent = createCustomElement(AuthComponent, {injector, strategyFactory});\n    if(!!customElements.get('auth-pr')) customElements.define('auth-pr', webComponent);\n  }\n\n  ngDoBootstrap() {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n  @Input() shouldCountClicks = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>auth works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}